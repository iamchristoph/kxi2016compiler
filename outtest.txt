Start FRAME M119 ;  Frame main backpatched to M119 
CALL M119  backpatched to M119 
End STOP 
X106 FUNC X106 ;  Contructor for class word 
PUSH T124 4 ;  word.T124, offset = 0 
PUSH R125 4 ;  word.R125, offset = -4 
REF T124 I102 R125 ;  R125 = T124.w offset = 0 
PUSH T126 4 ;  word.T126, offset = -8 
MOV P104 R125 ;  R125(offset=-4) = w 
PUSH T127 4 ;  word.T127, offset = -12 
MOV P105 I103 ;  size(offset=4) = s 
RTN ; return from function xtor 
M108 FUNC M108 ;  @:char read([]) 
PUSH L109 4 ;  read.i, offset = 0 
PUSH T129 4 ;  read.T129, offset = -4 
MOV N110 L109 ;  i(offset=0) = 0 
PUSH L111 4 ;  read.word, offset = -8 
PUSH A130 4 ;  read.A130, offset = -12 
PUSH S131 4 ;  read.S131, offset = -16 
MUL N112 1 S131 ;  21 * 1 -> S131 
NEW S131 A130 ;  new array of charof size S131 
PUSH T132 4 ;  read.T132, offset = -20 
MOV A130 L111 ;  word(offset=-8) = A130 
begin133 PUSH T134 4 ;  read.T134, offset = -24 
LT N113 L109 T134 ;  T134 = i < 20 
BF T134 endwhile135 ;  BranchFalse T134 (bool) endwhile135 
PUSH A136 1 ;  read.A136, offset = -28 
AEF L111 L109 A136 ;  word + i * sizeof char (pointer) 
READ A136 char ;  cin >> A136(char) 
PUSH T137 4 ;  read.T137, offset = -29 
ADD N114 L109 T137 ;  T137 = i + 1 
PUSH T138 4 ;  read.T138, offset = -33 
MOV T137 L109 ;  i(offset=0) = T137 
JMP begin133 ;  Jump begin133 
endwhile135 PUSH A139 1 ;  read.A139, offset = -37 
AEF L111 L109 A139 ;  word + i * sizeof char (pointer) 
PUSH T140 1 ;  read.T140, offset = -38 
MOV H115 A139 ;  A139(offset=-37) = '\0' 
RETURN L111 ; return @:char word from function func 
RTN ; return from function func 
M117 FUNC M117 ;  int write(['P116']) 
PUSH L118 4 ;  write.i, offset = 0 
PUSH T141 4 ;  write.T141, offset = -4 
MOV N110 L118 ;  i(offset=0) = 0 
PUSH F142 4 ;  write.F142, offset = -8 
FRAME M108 this ;  read([]) 
CALL M108 
PEEK F142 ;  get return value 
PUSH F143 4 ;  write.F143, offset = -12 
FRAME M117 this ;  write(['P116']) 
PUSH F142 4 ;  F142, offset = -8 
CALL M117 
PEEK F143 ;  get return value 
RETURN F143 ; return int F143 from function func 
begin144 PUSH A145 1 ;  write.A145, offset = -16 
AEF P116 L118 A145 ;  w + i * sizeof char (pointer) 
PUSH T146 4 ;  write.T146, offset = -17 
NE H115 A145 T146 ;  T146 = A145 != '\0' 
BF T146 endwhile147 ;  BranchFalse T146 (bool) endwhile147 
PUSH A148 1 ;  write.A148, offset = -21 
AEF P116 L118 A148 ;  w + i * sizeof char (pointer) 
WRITE A148 char ;  cout << A148(char) 
PUSH T149 4 ;  write.T149, offset = -22 
ADD N114 L118 T149 ;  T149 = i + 1 
PUSH T150 4 ;  write.T150, offset = -26 
MOV T149 L118 ;  i(offset=0) = T149 
JMP begin144 ;  Jump begin144 
endwhile147 RETURN L118 ; return int i from function func 
RTN ; return from function func 
M119 FUNC M119 ; void kxi2016 main() 
PUSH L120 4 ;  main.writer, offset = 0 
PUSH L121 4 ;  main.count, offset = -4 
PUSH R151 4 ;  main.R151, offset = -8 
FRAME M108 L120 ;  @:char read([]) 
CALL M108 
PEEK R151 ;  get return value 
PUSH R152 4 ;  main.R152, offset = -12 
FRAME M117 L120 ['R151'] ;  int write(['P116']) 
PUSH R151 4 ;  R151, offset = -8 
CALL M117 
PEEK R152 ;  get return value 
PUSH T153 4 ;  main.T153, offset = -16 
MOV R152 L121 ;  count(offset=-4) = R152 
PUSH T154 4 ;  main.T154, offset = -20 
ADD N122 L121 T154 ;  T154 = count + 5 
WRITE T154 int ;  cout << T154(int) 
RTN ; return from function main 
S123 FUNC S123 ;  static initializer for classword 
RTN ; return from static initializer for word 
S128 FUNC S128 ;  static initializer for classio 
RTN ; return from static initializer for io 
N112 .INT 21 
N114 .INT 1 
N110 .INT 0 
N113 .INT 20 
N122 .INT 5 
H115 .BYT '\0' 
